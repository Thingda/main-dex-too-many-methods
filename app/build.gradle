import java.lang.reflect.Array
import java.lang.reflect.Field

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "info.osom.multidex"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
	
	buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:multidex:1.0.0'
}

def patchKeepSpecs() {
    def clazz = Class.forName("com.android.build.gradle.internal.tasks.multidex.CreateManifestKeepList")
    def keepSpecsField = clazz.getDeclaredField("KEEP_SPECS")
    keepSpecsField.setAccessible(true)
    def keepSpecs = (Map) keepSpecsField.get(null)

    println "\nKEEP_SPECS **before** patch:"
    for (def item : keepSpecs) {
        if (item) {
            println item
        }
    }
    println ''
    excludeElement(keepSpecs, "activity")

    println "\nKEEP_SPECS **after** patch:"
    for (def item : keepSpecs) {
        if (item) {
            println item
        }
    }
    println ''
}

def excludeElement(keepSpecs, element) {
    Class mapClazz = Class.forName("com.google.common.collect.RegularImmutableMap")
    Field tableField = mapClazz.getDeclaredField("table")
    tableField.setAccessible(true)
    def table = tableField.get(keepSpecs)

    def index = getElementIndex(table, element)
    if (index == -1) {
        println "KEEP_SPECS (table): no '$element' found"
    } else {
        Array.set(table, index, null)
        println "KEEP_SPECS (table) patched: removed '$element' root"
    }

    def entriesField = mapClazz.getDeclaredField("entries")
    entriesField.setAccessible(true)
    def entries = entriesField.get(keepSpecs)

    index = getElementIndex(entries, element)
    if (index == -1) {
        println "KEEP_SPECS (entries): no '$element' found"
    } else {
        Array.set(entries, index, null)
        println "KEEP_SPECS (entries) patched: removed '$element' root"
    }
}

def getElementIndex(container, element) {
    int length = Array.getLength(container)
    for (int i=0; i < length; ++i) {
        def entry = Array.get(container, i)
        if (entry != null) {
            if (element.equals(entry.getKey())) {
                return i
            }
        }
    }
    return -1
}


patchKeepSpecs()
